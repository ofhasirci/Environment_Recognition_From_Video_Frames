apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion 23
        buildToolsVersion "23.0.2"

        defaultConfig {
            applicationId "com.example.veled.semesterproject"
            minSdkVersion.apiLevel 18
            targetSdkVersion.apiLevel 23
            versionCode 1
            versionName "1.0"
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles.add(file('proguard-android.txt'))
            }
        }

    }
    android.ndk {
        moduleName = "myModule"
        toolchain = 'clang'
        cppFlags.addAll("-std=c++11", "-fexceptions", "-frtti")
        cppFlags.add("-I${file("C:/opencvLib/OpenCV-2.4.11-android-sdk/OpenCV-android-sdk/sdk/native/jni/include")}".toString())
        ldLibs.addAll("android", "EGL", "GLESv2", "dl", "log", "z")
        stl = "gnustl_static"
        ldFlags.add("-latomic")
    }

    android.productFlavors {
        create("arm") {
            ndk.with {
                abiFilters.add("armeabi")

                File curDir = file('./')
                curDir = file(curDir.absolutePath)
                String libsDir = curDir.absolutePath + "\\src\\main\\jniLibs\\armeabi\\"

                ldLibs.add(libsDir + "libopencv_core.a")
                ldLibs.add(libsDir + "libopencv_highgui.a")
                ldLibs.add(libsDir + "libopencv_imgproc.a")
                ldLibs.add(libsDir + "libopencv_java.so")
                ldLibs.add(libsDir + "libopencv_ml.a")
                ldLibs.add(libsDir + "libopencv_flann.a")
            }
        }
        create("armv7") {
            ndk.with {
                abiFilters.add("armeabi-v7a")

                File curDir = file('./')
                curDir = file(curDir.absolutePath)
                String libsDir = curDir.absolutePath + "\\src\\main\\jniLibs\\armeabi-v7a\\"

                ldLibs.add(libsDir + "libopencv_core.a")
                ldLibs.add(libsDir + "libopencv_highgui.a")
                ldLibs.add(libsDir + "libopencv_imgproc.a")
                ldLibs.add(libsDir + "libopencv_java.so")
                ldLibs.add(libsDir + "libopencv_ml.a")
                ldLibs.add(libsDir + "libopencv_flann.a")
            }
        }
        create("x86") {
            ndk.with {
                abiFilters.add("x86")

                File curDir = file('./')
                curDir = file(curDir.absolutePath)
                String libsDir = curDir.absolutePath + "\\src\\main\\jniLibs\\x86\\"

                ldLibs.add(libsDir + "libopencv_core.a")
                ldLibs.add(libsDir + "libopencv_highgui.a")
                ldLibs.add(libsDir + "libopencv_imgproc.a")
                ldLibs.add(libsDir + "libopencv_java.so")
                ldLibs.add(libsDir + "libopencv_ml.a")
                ldLibs.add(libsDir + "libopencv_flann.a")
            }
        }
        create("mips") {
            ndk.with {
                abiFilters.add("mips")

                File curDir = file('./')
                curDir = file(curDir.absolutePath)
                String libsDir = curDir.absolutePath + "\\src\\main\\jniLibs\\mips\\"

                ldLibs.add(libsDir + "libopencv_core.a")
                ldLibs.add(libsDir + "libopencv_highgui.a")
                ldLibs.add(libsDir + "libopencv_imgproc.a")
                ldLibs.add(libsDir + "libopencv_java.so")
                ldLibs.add(libsDir + "libopencv_ml.a")
                ldLibs.add(libsDir + "libopencv_flann.a")
            }
        }
        create("fat") {

        }
    }

    android.sources {
        main {
            jni {
                source {
                    srcDir "src/main/jni"
                    exclude "src/main/jni/myModule.cpp ,src/main/jni/sift.cpp,src/main/jni/nonfree_init.cpp,src/main/jni/precomp.hpp,src/main/jni/precomp.cpp,src/main/jni/surf.cpp"

                }
            }
        }
    }




}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile project(':openCV')
}
